#!/bin/bash

###########################################################################
##
## Copyright 2015 Solar Team Eindhoven. All rights reserved.
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##   http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
###########################################################################

if [ $# -lt 3 ]; then
	echo "Usage: $0 <output file> <manifext file> <input files...>"
	exit 1;
fi

OUTFILE=$1
FILE=$2

THISPATH="$0"
while : ; do
    echo "$THISPATH"
    DIR=$(dirname "$THISPATH")
    NEWTHISPATH=$(readlink -f "$THISPATH")
    [ $? -eq 0 ] || break
    [ "$NEWTHISPATH" != "$THISPATH" ] || break
    THISPATH="$NEWTHISPATH"
done

SCHEMAFILE="$DIR/MANIFESTSchema.xsd"
xmllint --schema "$SCHEMAFILE" "$FILE" > /dev/null
EXITSTATUS=$?

if [ $EXITSTATUS -ne 0 ]; then
	exit $EXITSTATUS
fi

REQUIRED_DL=`xmlstarlet sel --text -t -v '//manifest/App/pluginfiles/file/text()' "$FILE"`

if [ "$REQUIRED_DL" != "" ]; then
echo "$REQUIRED_DL" | while read line ; do
    FOUNDIT=0

    for i in ${@:3}
    do
        THISFILE=`basename "$i"`
        if [ "$THISFILE" = "$line" ]; then
            FOUNDIT=1
            break
        fi
    done

    if [ $FOUNDIT -eq 0 ]; then
        echo "Missing file $line"
        exit 1
    fi
done
fi

XMLOUTFILE="$OUTFILE.xml"
echo "<!DOCTYPE RCC>" > $XMLOUTFILE
echo "<RCC version=\"1.0\">" >> $XMLOUTFILE
echo "<qresource>" >> $XMLOUTFILE
echo "<file alias=\"MANIFEST.xml\">$FILE</file>" >> $XMLOUTFILE

for i in ${@:3}
do
    FILEBASE=`basename "$i"`
    echo "<file alias=\"$FILEBASE\">$i</file>" >> $XMLOUTFILE
done

echo "</qresource>" >> $XMLOUTFILE
echo "</RCC>" >> $XMLOUTFILE

function ExecExists() {
	(which $1 >/dev/null 2>&1 && exit 0) || exit 1
}

if [ -e "$OE_QMAKE_RCC" ]; then
    RCC="$OE_QMAKE_RCC"
elif ExecExists rcc-qt5; then
    RCC="rcc-qt5"
elif ExecExists rcc; then
    RCC="rcc"
else
    echo "Could not find rcc, please install!!" >&2
    exit 1
fi

$RCC -o "$OUTFILE" -binary "$XMLOUTFILE"

rm "$XMLOUTFILE"
